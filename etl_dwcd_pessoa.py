# -*- coding: utf-8 -*-
"""ETL DWCD_PESSOA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZNIaK-HIAm4ptgcHKWIsXuvFvN0kMQ0T
"""

import pandas as pd
from datetime import datetime
import sqlite3

URL = "/content/drive/MyDrive/Projeto_Final_BI/"

"""# Extraindo valores do staging"""

conn_extract = sqlite3.connect(URL+"staging.db")
cursor = conn_extract.cursor()
df_extract = pd.read_sql_query("SELECT SEXO, RACACOR, ESTCIV, ESC2010, IDADE, DTNASC, SK_MORTE FROM STG_MORTALIDADE", conn_extract)
conn_extract.close()
df_extract

"""# Tratando colunas"""

df_extract.insert(0, 'SK_PESSOA', range(1, len(df_extract) + 1))
df_extract['RACACOR'] = df_extract['RACACOR'].fillna(-1).astype(int)
df_extract['ESTCIV'] = df_extract['ESTCIV'].fillna(-1).astype(int)
df_extract['ESC2010'] = df_extract['ESC2010'].fillna(-1).astype(int)

df_extract['IDADE'] = df_extract['IDADE'].apply(
    lambda x: 0 if x < 400
    else x%100 if x >= 401 and x < 500
    else x%100 + 100
)

df_extract['DT_NASCIMENTO'] = pd.to_datetime(
    df_extract['DTNASC'].fillna(0).astype(int).astype(str).str.zfill(8),
    format='%d%m%Y',
    errors='coerce'
)

df_extract

"""# Extraindo valores do DW e realizando merge"""

conn_extract = sqlite3.connect(URL+"dw_mortalidade.db")
cursor = conn_extract.cursor()
df_sexo = pd.read_sql_query("SELECT SK_SEXO, CD_SEXO FROM DWCD_SEXO", conn_extract)
df_raca = pd.read_sql_query("SELECT SK_RACA, CD_RACA FROM DWCD_RACA", conn_extract)
df_estciv = pd.read_sql_query("SELECT SK_ESTCIV, CD_ESTCIV FROM DWCD_ESTCIV", conn_extract)
df_esc = pd.read_sql_query("SELECT SK_ESCOLARIDADE, CD_ESCOLARIDADE FROM DWCD_ESCOLARIDADE", conn_extract)
conn_extract.close()

df_pessoa = pd.merge(df_extract, df_sexo, left_on='SEXO', right_on='CD_SEXO', how='left')
df_pessoa = pd.merge(df_pessoa, df_raca, left_on='RACACOR', right_on='CD_RACA', how='left')
df_pessoa = pd.merge(df_pessoa, df_estciv, left_on='ESTCIV', right_on='CD_ESTCIV', how='left')
df_pessoa = pd.merge(df_pessoa, df_esc, left_on='ESC2010', right_on='CD_ESCOLARIDADE', how='left')
df_pessoa["DT_CARGA"] = datetime.now().date()

df_pessoa = df_pessoa[['SK_PESSOA', 'SK_MORTE', 'SK_SEXO', 'SK_RACA', 'SK_ESTCIV', 'SK_ESCOLARIDADE', 'IDADE', 'DT_NASCIMENTO', 'DT_CARGA']]
df_pessoa

"""# Criando tabela DWCD_PESSOA no DW"""

conn = sqlite3.connect(URL+"dw_mortalidade.db")
cur = conn.cursor()

cur.execute("""DROP TABLE IF EXISTS DWCD_PESSOA;""")

cur.execute("""
CREATE TABLE DWCD_PESSOA (
    SK_PESSOA INTEGER PRIMARY KEY,
    SK_MORTE INTEGER NOT NULL,
    SK_SEXO INTEGER NOT NULL,
    SK_RACA INTEGER NOT NULL,
    SK_ESTCIV INTEGER NOT NULL,
    SK_ESCOLARIDADE INTEGER NOT NULL,
    IDADE INTEGER,
    DT_NASCIMENTO DATE,
    DT_CARGA DATE
);
""")

conn = sqlite3.connect(URL+"dw_mortalidade.db")
df_pessoa.to_sql('DWCD_PESSOA', conn, if_exists='append', index=False)

conn.commit()
conn.close()