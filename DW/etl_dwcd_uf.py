# -*- coding: utf-8 -*-
"""ETL DWCD_UF.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OK9zGQhcCy5YZqp-GGknpo5OMhqAb82R
"""

import pandas as pd
import numpy as np
from datetime import datetime
import sqlite3

URL = "/content/drive/MyDrive/Projeto_Final_BI/"

conn_dw = sqlite3.connect(URL+"dw_mortalidade.db")
cur = conn_dw.cursor()

cur.execute("""
CREATE TABLE IF NOT EXISTS DWCD_UF (
  SK_UF INTEGER PRIMARY KEY,
  CD_UF INTEGER NOT NULL,
  NM_UF TEXT NOT NULL,
  SG_UF TEXT NOT NULL,
  DT_CARGA DATE DEFAULT CURRENT_DATE
);
""")

# Cria index para não permitir dados duplicados
cur.execute("""
CREATE UNIQUE INDEX IF NOT EXISTS idx_uf_unico
ON DWCD_UF (CD_UF, SG_UF, NM_UF);
""")

conn_dw.commit()
conn_dw.close()

# Conecta ao DW
conn_dw = sqlite3.connect(URL+"dw_mortalidade.db")
cur = conn_dw.cursor()

# Anexa o banco de staging
cur.execute(f"ATTACH DATABASE '{URL}STG/staging.db' AS stg;")

cur.execute("""
CREATE TEMP TABLE temp_cte_ufs AS
SELECT DISTINCT CD_UF,  SG_UF, NM_UF
FROM stg.STG_LOCALIDADE
GROUP BY CD_UF, SG_UF, NM_UF;
""")

# Atualiza registros existentes de UF
cur.execute("""
UPDATE DWCD_UF
SET
    SG_UF = (SELECT SG_UF FROM temp_cte_ufs c WHERE c.CD_UF = DWCD_UF.CD_UF),
    NM_UF = (SELECT NM_UF FROM temp_cte_ufs c WHERE c.CD_UF = DWCD_UF.CD_UF),
    DT_CARGA = CURRENT_DATE
WHERE CD_UF IN (SELECT CD_UF FROM temp_cte_ufs);
""")

# Insere novas UFs (ignora se já existir CD_UF)
cur.execute("""
INSERT OR IGNORE INTO DWCD_UF (CD_UF, SG_UF, NM_UF, DT_CARGA)
SELECT CD_UF, SG_UF, NM_UF, CURRENT_DATE
FROM temp_cte_ufs;
""")

# Commit e fecha
conn_dw.commit()
conn_dw.close()

conn = sqlite3.connect(URL+"dw_mortalidade.db")

df = pd.read_sql_query("SELECT * FROM DWCD_UF", conn)
conn.close()