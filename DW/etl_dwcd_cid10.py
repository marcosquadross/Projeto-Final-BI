# -*- coding: utf-8 -*-
"""DWCD_CID10.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bzavNzwff6SlLiZO_NCh4LGYfSoCLczh

# Imports e conexões
"""

import pandas as pd
import sqlite3
from datetime import datetime

URL = "/content/drive/MyDrive/Projeto_Final_BI/"
URL_DW = URL + 'DW/'

from google.colab import drive
drive.mount('/content/drive')

"""# Criando tabela do DWCD_CID"""

conn_dw = sqlite3.connect(URL_DW+"dw_mortalidade.db")
cur = conn_dw.cursor()

cur.execute("""
CREATE TABLE IF NOT EXISTS DWCD_CID (
    SK_CID INTEGER PRIMARY KEY,
    CD_CID INTEGER NOT NULL,
    NM_CID TEXT NOT NULL,
    IN_DE_CRIANCA BOOLEAN NOT NULL,
    IN_DE_ADULTO BOOLEAN NOT NULL,
    DT_CARGA DATE DEFALT CURRENT_DATE NOT NULL
    );
""")

# Cria index para não permitir dados duplicados
cur.execute("""
CREATE UNIQUE INDEX IF NOT EXISTS idx_unico
ON DWCD_CID (CD_CID);
""")

conn_dw.commit()
conn_dw.close()

# Conecta ao DW
conn_dw = sqlite3.connect(URL_DW+"dw_mortalidade.db")
cur = conn_dw.cursor()

# Anexa o banco de staging
cur.execute(f"ATTACH DATABASE '{URL}STG/staging.db' AS stg;")

# Cria a tabela temporária
cur.execute("""
CREATE TEMP TABLE temp_cid AS
SELECT DISTINCT
    CID.CD_CID,
    CID.NM_CID,
    CASE WHEN DEC.CD_CID IS NOT NULL THEN 1 ELSE 0 END AS IN_DE_CRIANCA,
    CASE WHEN DEA.CD_CID IS NOT NULL THEN 1 ELSE 0 END AS IN_DE_ADULTO
FROM stg.STG_CID CID
LEFT JOIN stg.STG_DE_CRIANCA DEC ON CID.CD_CID = DEC.CD_CID
LEFT JOIN stg.STG_DE_ADULTO DEA ON CID.CD_CID = DEA.CD_CID;
""")

# Índice para acelerar UPDATE/INSERT
cur.execute("CREATE INDEX idx_temp_cid ON temp_cid(CD_CID);")

# Atualiza registros existentes
cur.execute("""
UPDATE DWCD_CID
SET
    NM_CID = (SELECT NM_CID FROM temp_cid c WHERE c.CD_CID = DWCD_CID.CD_CID),
    IN_DE_CRIANCA = (SELECT IN_DE_CRIANCA FROM temp_cid c WHERE c.CD_CID = DWCD_CID.CD_CID),
    IN_DE_ADULTO = (SELECT IN_DE_ADULTO FROM temp_cid c WHERE c.CD_CID = DWCD_CID.CD_CID),
    DT_CARGA = CURRENT_DATE
WHERE CD_CID IN (SELECT CD_CID FROM temp_cid);
""")

# Insere novos registros
cur.execute("""
INSERT OR IGNORE INTO DWCD_CID (CD_CID, NM_CID, IN_DE_CRIANCA, IN_DE_ADULTO, DT_CARGA)
SELECT CD_CID, NM_CID, IN_DE_CRIANCA, IN_DE_ADULTO, CURRENT_DATE
FROM temp_cid;
""")

conn_dw.commit()
conn_dw.close()

conn_dw = sqlite3.connect(URL_DW+"dw_mortalidade.db")
df = pd.read_sql_query("SELECT * FROM DWCD_CID", conn_dw)
conn_dw.close()
df