# -*- coding: utf-8 -*-
"""DWMV_OBITO.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wjWqrqy6nqbVe7Wj0w4_HR-TxUl-1e_g
"""

import pandas as pd
import sqlite3
from datetime import datetime
import numpy as np

from google.colab import drive
drive.mount('/content/drive')

"""# Connections"""

URL = "/content/drive/MyDrive/Projeto_Final_BI/"

DATE_INSERT = pd.Timestamp("2024-01-01").date()
DATE_INSERT

conn_dw = sqlite3.connect(URL+"DW/dw_mortalidade.db")

cur_dw = conn_dw.cursor()

"""# Criando Tabela DWMV_OBITO"""

cur_dw.execute("""
CREATE TABLE IF NOT EXISTS DWMV_OBITO (
    SK_OBITO INTEGER PRIMARY KEY,
    SK_PESSOA INTEGER NOT NULL,
    SK_CAUSAOBITO INTEGER NOT NULL,
    DT_OBITO DATE NOT NULL,
    SK_MUNICIPIO INTEGER NOT NULL,
    SK_ASSISTMED INTEGER NOT NULL,
    SK_GESTACIONAL INTEGER NOT NULL,
    DT_CARGA DATE NOT NULL
);
""")

conn_dw.commit()
conn_dw.close()

conn_dw = sqlite3.connect(URL+"DW/dw_mortalidade.db")
cur = conn_dw.cursor()

# Anexa o banco de staging
cur.execute(f"ATTACH DATABASE '{URL}STG/staging.db' AS stg;")

cur.execute("""
CREATE TEMP TABLE temp_pessoa AS
SELECT
    PE.SK_PESSOA,
    SX.CD_SEXO,
    RC.CD_RACA,
    EC.CD_ESTCIV,
    EL.CD_ESCOLARIDADE,
    PE.IDADE
FROM DWCD_PESSOA AS PE
    JOIN DWCD_SEXO AS SX
      ON PE.SK_SEXO = SX.SK_SEXO
    JOIN DWCD_RACA AS RC
      ON PE.SK_RACA = RC.SK_RACA
    JOIN DWCD_ESTCIV AS EC
      ON PE.SK_ESTCIV = EC.SK_ESTCIV
    JOIN DWCD_ESCOLARIDADE AS EL
      ON PE.SK_ESCOLARIDADE = EL.SK_ESCOLARIDADE;
""")

cur.execute("""
CREATE TEMP TABLE temp_causaobito AS
SELECT
    CO.SK_CAUSAOBITO,
    CD.CD_CID,
    CB.CD_CIRCOBITO,
    CO.IN_DE
FROM DWCD_CAUSAOBITO AS CO
    JOIN DWCD_CID AS CD
      ON CO.SK_CID = CD.SK_CID
    JOIN DWCD_CIRCOBITO AS CB
      ON CO.SK_CIRCOBITO = CB.SK_CIRCOBITO;
""")

cur.execute("""
CREATE TEMP TABLE temp_stg AS
SELECT
    COALESCE(SEXO, -1) AS SEXO,
    COALESCE(RACACOR, -1) AS RACACOR,
    COALESCE(ESTCIV, -1) AS ESTCIV,
    COALESCE(ESC2010, -1) AS ESC2010,
    CASE
        WHEN M.IDADE < 400 THEN 0
        WHEN M.IDADE >= 500 AND M.IDADE < 600 THEN 100 + M.IDADE%100
        WHEN M.IDADE >= 600 THEN -1
        ELSE M.IDADE%100
    END AS IDADE,
    date(
        substr(printf('%08d', DTOBITO), 5, 4) || '-' ||
        substr(printf('%08d', DTOBITO), 3, 2) || '-' ||
        substr(printf('%08d', DTOBITO), 1, 2)
    ) AS DT_OBITO,
    COALESCE(CODMUNOCOR, -1) AS CODMUNOCOR,
    COALESCE(ASSISTMED, -1) AS ASSISTMED,
    COALESCE(CAUSABAS, -1) AS CAUSABAS,
    COALESCE(CIRCOBITO, -1) AS CIRCOBITO,
    COALESCE(TPMORTEOCO, -1) AS TPMORTEOCO,
    CASE
        WHEN M.CAUSABAS IN (SELECT CD_CID FROM stg.STG_DE_CRIANCA) AND M.IDADE < 405 THEN 1
        WHEN M.CAUSABAS IN (SELECT CD_CID FROM stg.STG_DE_ADULTO) AND( M.IDADE >= 405 AND M.IDADE < 475) THEN 1
        ELSE 0
    END AS IN_DE
FROM stg.STG_MORTALIDADE AS M

""")

cur.execute("""
CREATE TEMP TABLE temp_obito AS
SELECT
    COALESCE(P.SK_PESSOA, -1)       AS SK_PESSOA,
    COALESCE(C.SK_CAUSAOBITO, -1)   AS SK_CAUSAOBITO,
    S.DT_OBITO,
    COALESCE(M.SK_MUNICIPIO, -1)    AS SK_MUNICIPIO,
    COALESCE(A.SK_ASSISTMED, -1)    AS SK_ASSISTMED,
    COALESCE(G.SK_GESTACIONAL, -1)  AS SK_GESTACIONAL
FROM temp_stg AS S
    LEFT JOIN temp_pessoa AS P
      ON S.SEXO = P.CD_SEXO
     AND S.RACACOR = P.CD_RACA
     AND S.ESTCIV = P.CD_ESTCIV
     AND S.ESC2010 = P.CD_ESCOLARIDADE
     AND S.IDADE = P.IDADE
    LEFT JOIN temp_causaobito AS C
      ON S.CAUSABAS = C.CD_CID
     AND S.CIRCOBITO = C.CD_CIRCOBITO
     AND S.IN_DE = C.IN_DE
    LEFT JOIN DWCD_MUNICIPIO AS M
      ON S.CODMUNOCOR = M.CD_MUNICIPIO
    LEFT JOIN DWCD_ASSISTMED AS A
      ON S.ASSISTMED = A.CD_ASSISTMED
    LEFT JOIN DWCD_GESTACIONAL AS G
      ON S.TPMORTEOCO = G.CD_GESTACIONAL;
""")

cur.execute(f" DELETE FROM DWMV_OBITO WHERE DT_OBITO >= {DATE_INSERT}")

cur.execute("""
INSERT INTO DWMV_OBITO (
    SK_PESSOA,
    SK_CAUSAOBITO,
    DT_OBITO,
    SK_MUNICIPIO,
    SK_ASSISTMED,
    SK_GESTACIONAL,
    DT_CARGA
    )
SELECT
    SK_PESSOA,
    SK_CAUSAOBITO,
    DT_OBITO,
    SK_MUNICIPIO,
    SK_ASSISTMED,
    SK_GESTACIONAL,
    CURRENT_DATE
FROM temp_obito;
""")

conn_dw.commit()
conn_dw.close()

df